# Generated by Django 5.1.5 on 2025-03-22 18:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("lists", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Log",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_date", models.DateField()),
                ("position", models.CharField(max_length=15)),
                (
                    "type",
                    models.TextField(
                        choices=[("O", "Online"), ("S", "Sim")], max_length=1
                    ),
                ),
                (
                    "theory",
                    models.IntegerField(
                        choices=[
                            (1, "Requirements not met"),
                            (2, "Requirements partially met"),
                            (3, "Requirements met"),
                            (4, "Requirements exceeded"),
                        ]
                    ),
                ),
                ("theory_positives", models.TextField(blank=True, null=True)),
                ("theory_negatives", models.TextField(blank=True, null=True)),
                (
                    "phraseology",
                    models.IntegerField(
                        choices=[
                            (1, "Requirements not met"),
                            (2, "Requirements partially met"),
                            (3, "Requirements met"),
                            (4, "Requirements exceeded"),
                        ]
                    ),
                ),
                ("phraseology_positives", models.TextField(blank=True, null=True)),
                ("phraseology_negatives", models.TextField(blank=True, null=True)),
                (
                    "coordination",
                    models.IntegerField(
                        choices=[
                            (1, "Requirements not met"),
                            (2, "Requirements partially met"),
                            (3, "Requirements met"),
                            (4, "Requirements exceeded"),
                        ]
                    ),
                ),
                ("coordination_positives", models.TextField(blank=True, null=True)),
                ("coordination_negatives", models.TextField(blank=True, null=True)),
                (
                    "tag_management",
                    models.IntegerField(
                        choices=[
                            (1, "Requirements not met"),
                            (2, "Requirements partially met"),
                            (3, "Requirements met"),
                            (4, "Requirements exceeded"),
                        ]
                    ),
                ),
                ("tag_management_positives", models.TextField(blank=True, null=True)),
                ("tag_management_negatives", models.TextField(blank=True, null=True)),
                (
                    "situational_awareness",
                    models.IntegerField(
                        choices=[
                            (1, "Requirements not met"),
                            (2, "Requirements partially met"),
                            (3, "Requirements met"),
                            (4, "Requirements exceeded"),
                        ]
                    ),
                ),
                (
                    "situational_awareness_positives",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "situational_awareness_negatives",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "traffic_flow",
                    models.IntegerField(
                        choices=[
                            (1, "Requirements not met"),
                            (2, "Requirements partially met"),
                            (3, "Requirements met"),
                            (4, "Requirements exceeded"),
                        ]
                    ),
                ),
                ("traffic_flow_positives", models.TextField(blank=True, null=True)),
                ("traffic_flow_negatives", models.TextField(blank=True, null=True)),
                (
                    "separation",
                    models.IntegerField(
                        choices=[
                            (1, "Requirements not met"),
                            (2, "Requirements partially met"),
                            (3, "Requirements met"),
                            (4, "Requirements exceeded"),
                        ]
                    ),
                ),
                ("separation_positives", models.TextField(blank=True, null=True)),
                ("separation_negatives", models.TextField(blank=True, null=True)),
                (
                    "ability_to_work_under_pressure",
                    models.IntegerField(
                        choices=[
                            (1, "Requirements not met"),
                            (2, "Requirements partially met"),
                            (3, "Requirements met"),
                            (4, "Requirements exceeded"),
                        ]
                    ),
                ),
                (
                    "ability_to_work_under_pressure_positives",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "ability_to_work_under_pressure_negatives",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "motivation",
                    models.IntegerField(
                        choices=[
                            (1, "Requirements not met"),
                            (2, "Requirements partially met"),
                            (3, "Requirements met"),
                            (4, "Requirements exceeded"),
                        ]
                    ),
                ),
                ("motivation_positives", models.TextField(blank=True, null=True)),
                ("motivation_negatives", models.TextField(blank=True, null=True)),
                ("internal_remarks", models.TextField(blank=True, null=True)),
                ("final_comment", models.TextField(blank=True, null=True)),
                ("result", models.BooleanField()),
                ("next_step", models.TextField(blank=True, max_length=30, null=True)),
                (
                    "course",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="lists.course",
                    ),
                ),
                (
                    "mentor",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="mentor",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "trainee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trainee",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
